from Crypto.Util.number import *
e = 3
n = 131568056653373132012174976653266884910157447726840322128654668864744046838266089026781586223439349724120314053694539817871939811571791816723493939318461523177171366268168393668921342560692769288416456729904590430725433093936110904690901655852707387030375716854722258158043345187159940346383427399753323791427
ciphertext = 898564915277349210856325643177982880844269990070750993964886895279898673815668084088711509416748167698104435154155125903563814943672577759197896689419072923530272379905743352154731864706846939063378835946564725599528080721144587149407333

#print(ciphertext**(1/e))

def cube_root(N):
	left = 0
	right = N
	mid = (left + right)//2
	cubed = mid**3
	while cubed != N:
		if cubed == N:
			break
		if cubed > N:
			right = mid-1
		elif cubed < N:
			left = mid+1
		mid = (left + right)//2
		cubed = mid**3
	return mid


	mid = (left + right)//2
	cubed = mid**3

#print(cube_root(274625))
root = cube_root(ciphertext)
print(long_to_bytes(root))

print(long_to_bytes(root))

